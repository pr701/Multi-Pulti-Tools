//------------------------------------------------
//--- 010 Editor v8.0 Binary Template
//
//      File: anm.bt
//   Authors: painter
//   Version: 1.0.0.0
//   Purpose: Parse MediaHouse animation files
//  Category: Resources
// File Mask: *.an
//  ID Bytes: 41 4E // AN
//   History:
//   1.0.0.1    2020-08-02 Researched animation sequince headers.
//   1.0        2020-08-03 Researched header and color table.
//------------------------------------------------

// Define custom colors

#define HEADER_COLOR    0xFEF4FF
#define CONTENT_COLOR   0xDDE9FF
#define DATA_COLOR      0xFBFFE8
#define OFFSET_COLOR    0xFFCEF0
#define COUNT_COLOR     0xDCD1FF
#define SIZE_COLOR      0xFFE9DD

typedef struct
{
    CHAR    Magic[2] <format=hex, comment=CommentMagic, bgcolor=cLtGray>;
    SHORT   Width;
    SHORT   Hight;
    SHORT   SequinceCount <bgcolor=COUNT_COLOR>;
    CHAR    Name[23] <bgcolor=DATA_COLOR>;
    UBYTE   ColorCount <bgcolor=COUNT_COLOR>;;
} Header_t;

typedef struct {
    UBYTE   Reserved;
    UBYTE   Blue;
    UBYTE   Green;
    UBYTE   Red;
} RGB_t <read=ReadRGB>;

typedef struct
{
    CHAR Name[41];
    USHORT FrameCount;
    USHORT FrameSpeed;
    SHORT Reseved1;
    SHORT Reseved2;
    DWORD FrameOffset;
    DWORD DataOffset;
    DWORD ChunkSize;
} Sequince_t;

typedef struct 
{
    DWORD Offset;
} Frames_t;

// Read functions
string ReadRGB( RGB_t &c )
{
    string s;
    SPrintf( s, "#%02X%02X%02X", c.Red, c.Green, c.Blue );
    return s;
}

// Define the headers
LittleEndian(); 
SetBackColor(HEADER_COLOR);
Header_t header;

// Check for header
if( header.Magic != "AN" )
{
    Warning( "File is not a animation. Template stopped." );
    return -1;
}

SetBackColor(CONTENT_COLOR);
RGB_t Colors[256];
BYTE Padding;

Sequince_t Sequinces[header.SequinceCount];